{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jhonniel\\\\Documents\\\\React tutorial\\\\18-nextJs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { MongoClient } from \"mongodb\";\nimport MeetUpLIst from \"../components/meetups/MeetupList\";\nimport { Fragment } from 'react'; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetups\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 5 , 12345 some City\",\n//     description: \"This is a first meetup!\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetups\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 14 , 54743 some City\",\n//     description: \"This is a second meetup!\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(MeetUpLIst, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://jarrel_14:YPtSLQbUVUBtwL8I@cluster0.f34cpmb.mongodb.net/?retryWrites=true&w=majority\"); // The .db command will create a new database if it doesn't exist, otherwise it will return the existing database.\n\n  const db = client.db(); // The .collection command will pick up the data from the db \n\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetups => ({\n        title: meetups.title,\n        address: meetups.address,\n        image: meetups.image,\n        id: meetups._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Jhonniel/Documents/React tutorial/18-nextJs/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MongoClient","MeetUpLIst","Fragment","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AAAA,UAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;;AAKA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,oGADmB,CAArB,CAFqC,CAKrC;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CANqC,CAOrC;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaV,OAAD,KAAc;AACjCW,QAAAA,KAAK,EAAEX,OAAO,CAACW,KADkB;AAEjCC,QAAAA,OAAO,EAAEZ,OAAO,CAACY,OAFgB;AAGjCC,QAAAA,KAAK,EAAEb,OAAO,CAACa,KAHkB;AAIjCC,QAAAA,EAAE,EAAEd,OAAO,CAACe,GAAR,CAAYC,QAAZ;AAJ6B,OAAd,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AACD,eAAenB,QAAf","sourcesContent":["import Head from 'next/head';\r\n\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetUpLIst from \"../components/meetups/MeetupList\";\r\nimport { Fragment } from 'react';\r\n// const DUMMY_MEETUPS = [\r\n//   {\r\n//     id: \"m1\",\r\n//     title: \"A First Meetups\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 5 , 12345 some City\",\r\n//     description: \"This is a first meetup!\",\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     title: \"A Second Meetups\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 14 , 54743 some City\",\r\n//     description: \"This is a second meetup!\",\r\n//   },\r\n// ];\r\n\r\nfunction HomePage(props) {\r\n  <Fragment>\r\n    <Head>\r\n      \r\n    </Head>\r\n  </Fragment>\r\n  return <MeetUpLIst meetups={props.meetups} />;\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://jarrel_14:YPtSLQbUVUBtwL8I@cluster0.f34cpmb.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  // The .db command will create a new database if it doesn't exist, otherwise it will return the existing database.\r\n  const db = client.db();\r\n  // The .collection command will pick up the data from the db \r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetups) => ({\r\n        title: meetups.title,\r\n        address: meetups.address,\r\n        image: meetups.image,\r\n        id: meetups._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}